# Makefile.in generated by automake 1.11 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Makefile.am's purpose is to build the unit test programs and benchmarks.
#
# Copyright (c) 2001, 2002, 2003 X-Way Rights BV
# Copyright (c) 2009 Bob Deblier
#
# Author: Bob Deblier <bob.deblier@telenet.be>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
TESTS = testmd5$(EXEEXT) testripemd128$(EXEEXT) testripemd160$(EXEEXT) \
	testripemd256$(EXEEXT) testripemd320$(EXEEXT) \
	testsha1$(EXEEXT) testsha224$(EXEEXT) testsha256$(EXEEXT) \
	testsha384$(EXEEXT) testsha512$(EXEEXT) testhmacmd5$(EXEEXT) \
	testhmacsha1$(EXEEXT) testaes$(EXEEXT) testblowfish$(EXEEXT) \
	testmp$(EXEEXT) testmpinv$(EXEEXT) testdsa$(EXEEXT) \
	testrsa$(EXEEXT) testrsacrt$(EXEEXT) testdldp$(EXEEXT) \
	testelgamal$(EXEEXT)
check_PROGRAMS = testmd5$(EXEEXT) testripemd128$(EXEEXT) \
	testripemd160$(EXEEXT) testripemd256$(EXEEXT) \
	testripemd320$(EXEEXT) testsha1$(EXEEXT) testsha224$(EXEEXT) \
	testsha256$(EXEEXT) testsha384$(EXEEXT) testsha512$(EXEEXT) \
	testhmacmd5$(EXEEXT) testhmacsha1$(EXEEXT) testaes$(EXEEXT) \
	testblowfish$(EXEEXT) testmp$(EXEEXT) testmpinv$(EXEEXT) \
	testdsa$(EXEEXT) testrsa$(EXEEXT) testrsacrt$(EXEEXT) \
	testdldp$(EXEEXT) testelgamal$(EXEEXT)
EXTRA_PROGRAMS = benchme$(EXEEXT) benchrsa$(EXEEXT) benchhf$(EXEEXT) \
	benchbc$(EXEEXT)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_benchbc_OBJECTS = benchbc.$(OBJEXT)
benchbc_OBJECTS = $(am_benchbc_OBJECTS)
benchbc_LDADD = $(LDADD)
benchbc_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_benchhf_OBJECTS = benchhf.$(OBJEXT)
benchhf_OBJECTS = $(am_benchhf_OBJECTS)
benchhf_LDADD = $(LDADD)
benchhf_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_benchme_OBJECTS = benchme.$(OBJEXT)
benchme_OBJECTS = $(am_benchme_OBJECTS)
benchme_LDADD = $(LDADD)
benchme_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_benchrsa_OBJECTS = benchrsa.$(OBJEXT)
benchrsa_OBJECTS = $(am_benchrsa_OBJECTS)
benchrsa_LDADD = $(LDADD)
benchrsa_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testaes_OBJECTS = testaes.$(OBJEXT) testutil.$(OBJEXT)
testaes_OBJECTS = $(am_testaes_OBJECTS)
testaes_LDADD = $(LDADD)
testaes_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testblowfish_OBJECTS = testblowfish.$(OBJEXT) testutil.$(OBJEXT)
testblowfish_OBJECTS = $(am_testblowfish_OBJECTS)
testblowfish_LDADD = $(LDADD)
testblowfish_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testdldp_OBJECTS = testdldp.$(OBJEXT)
testdldp_OBJECTS = $(am_testdldp_OBJECTS)
testdldp_LDADD = $(LDADD)
testdldp_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testdsa_OBJECTS = testdsa.$(OBJEXT)
testdsa_OBJECTS = $(am_testdsa_OBJECTS)
testdsa_LDADD = $(LDADD)
testdsa_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testelgamal_OBJECTS = testelgamal.$(OBJEXT)
testelgamal_OBJECTS = $(am_testelgamal_OBJECTS)
testelgamal_LDADD = $(LDADD)
testelgamal_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testhmacmd5_OBJECTS = testhmacmd5.$(OBJEXT)
testhmacmd5_OBJECTS = $(am_testhmacmd5_OBJECTS)
testhmacmd5_LDADD = $(LDADD)
testhmacmd5_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testhmacsha1_OBJECTS = testhmacsha1.$(OBJEXT)
testhmacsha1_OBJECTS = $(am_testhmacsha1_OBJECTS)
testhmacsha1_LDADD = $(LDADD)
testhmacsha1_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testmd5_OBJECTS = testmd5.$(OBJEXT)
testmd5_OBJECTS = $(am_testmd5_OBJECTS)
testmd5_LDADD = $(LDADD)
testmd5_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testmp_OBJECTS = testmp.$(OBJEXT)
testmp_OBJECTS = $(am_testmp_OBJECTS)
testmp_LDADD = $(LDADD)
testmp_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testmpinv_OBJECTS = testmpinv.$(OBJEXT)
testmpinv_OBJECTS = $(am_testmpinv_OBJECTS)
testmpinv_LDADD = $(LDADD)
testmpinv_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testripemd128_OBJECTS = testripemd128.$(OBJEXT)
testripemd128_OBJECTS = $(am_testripemd128_OBJECTS)
testripemd128_LDADD = $(LDADD)
testripemd128_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testripemd160_OBJECTS = testripemd160.$(OBJEXT)
testripemd160_OBJECTS = $(am_testripemd160_OBJECTS)
testripemd160_LDADD = $(LDADD)
testripemd160_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testripemd256_OBJECTS = testripemd256.$(OBJEXT)
testripemd256_OBJECTS = $(am_testripemd256_OBJECTS)
testripemd256_LDADD = $(LDADD)
testripemd256_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testripemd320_OBJECTS = testripemd320.$(OBJEXT)
testripemd320_OBJECTS = $(am_testripemd320_OBJECTS)
testripemd320_LDADD = $(LDADD)
testripemd320_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testrsa_OBJECTS = testrsa.$(OBJEXT)
testrsa_OBJECTS = $(am_testrsa_OBJECTS)
testrsa_LDADD = $(LDADD)
testrsa_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testrsacrt_OBJECTS = testrsacrt.$(OBJEXT)
testrsacrt_OBJECTS = $(am_testrsacrt_OBJECTS)
testrsacrt_LDADD = $(LDADD)
testrsacrt_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testsha1_OBJECTS = testsha1.$(OBJEXT)
testsha1_OBJECTS = $(am_testsha1_OBJECTS)
testsha1_LDADD = $(LDADD)
testsha1_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testsha224_OBJECTS = testsha224.$(OBJEXT)
testsha224_OBJECTS = $(am_testsha224_OBJECTS)
testsha224_LDADD = $(LDADD)
testsha224_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testsha256_OBJECTS = testsha256.$(OBJEXT)
testsha256_OBJECTS = $(am_testsha256_OBJECTS)
testsha256_LDADD = $(LDADD)
testsha256_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testsha384_OBJECTS = testsha384.$(OBJEXT)
testsha384_OBJECTS = $(am_testsha384_OBJECTS)
testsha384_LDADD = $(LDADD)
testsha384_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
am_testsha512_OBJECTS = testsha512.$(OBJEXT)
testsha512_OBJECTS = $(am_testsha512_OBJECTS)
testsha512_LDADD = $(LDADD)
testsha512_DEPENDENCIES = $(top_builddir)/libbeecrypt.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(benchbc_SOURCES) $(benchhf_SOURCES) $(benchme_SOURCES) \
	$(benchrsa_SOURCES) $(testaes_SOURCES) $(testblowfish_SOURCES) \
	$(testdldp_SOURCES) $(testdsa_SOURCES) $(testelgamal_SOURCES) \
	$(testhmacmd5_SOURCES) $(testhmacsha1_SOURCES) \
	$(testmd5_SOURCES) $(testmp_SOURCES) $(testmpinv_SOURCES) \
	$(testripemd128_SOURCES) $(testripemd160_SOURCES) \
	$(testripemd256_SOURCES) $(testripemd320_SOURCES) \
	$(testrsa_SOURCES) $(testrsacrt_SOURCES) $(testsha1_SOURCES) \
	$(testsha224_SOURCES) $(testsha256_SOURCES) \
	$(testsha384_SOURCES) $(testsha512_SOURCES)
DIST_SOURCES = $(benchbc_SOURCES) $(benchhf_SOURCES) \
	$(benchme_SOURCES) $(benchrsa_SOURCES) $(testaes_SOURCES) \
	$(testblowfish_SOURCES) $(testdldp_SOURCES) $(testdsa_SOURCES) \
	$(testelgamal_SOURCES) $(testhmacmd5_SOURCES) \
	$(testhmacsha1_SOURCES) $(testmd5_SOURCES) $(testmp_SOURCES) \
	$(testmpinv_SOURCES) $(testripemd128_SOURCES) \
	$(testripemd160_SOURCES) $(testripemd256_SOURCES) \
	$(testripemd320_SOURCES) $(testrsa_SOURCES) \
	$(testrsacrt_SOURCES) $(testsha1_SOURCES) \
	$(testsha224_SOURCES) $(testsha256_SOURCES) \
	$(testsha384_SOURCES) $(testsha512_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ASM_ALIGN = @ASM_ALIGN@
ASM_ARCH = @ASM_ARCH@
ASM_BIGENDIAN = @ASM_BIGENDIAN@
ASM_CPU = @ASM_CPU@
ASM_GLOBL = @ASM_GLOBL@
ASM_GNU_STACK = @ASM_GNU_STACK@
ASM_GSYM_PREFIX = @ASM_GSYM_PREFIX@
ASM_LSYM_PREFIX = @ASM_LSYM_PREFIX@
ASM_OS = @ASM_OS@
ASM_TEXTSEG = @ASM_TEXTSEG@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INCLUDE_DLFCN_H = @INCLUDE_DLFCN_H@
INCLUDE_INTTYPES_H = @INCLUDE_INTTYPES_H@
INCLUDE_MALLOC_H = @INCLUDE_MALLOC_H@
INCLUDE_PTHREAD_H = @INCLUDE_PTHREAD_H@
INCLUDE_SCHED_H = @INCLUDE_SCHED_H@
INCLUDE_SEMAPHORE_H = @INCLUDE_SEMAPHORE_H@
INCLUDE_STDINT_H = @INCLUDE_STDINT_H@
INCLUDE_STDIO_H = @INCLUDE_STDIO_H@
INCLUDE_STDLIB_H = @INCLUDE_STDLIB_H@
INCLUDE_STRING_H = @INCLUDE_STRING_H@
INCLUDE_SYNCH_H = @INCLUDE_SYNCH_H@
INCLUDE_THREAD_H = @INCLUDE_THREAD_H@
INCLUDE_UNISTD_H = @INCLUDE_UNISTD_H@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MP_WBITS = @MP_WBITS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENMP_CFLAGS = @OPENMP_CFLAGS@
OPENMP_CXXFLAGS = @OPENMP_CXXFLAGS@
OPENMP_LIBS = @OPENMP_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHON = @PYTHON@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TYPEDEF_BC_COND_T = @TYPEDEF_BC_COND_T@
TYPEDEF_BC_MUTEX_T = @TYPEDEF_BC_MUTEX_T@
TYPEDEF_BC_THREADID_T = @TYPEDEF_BC_THREADID_T@
TYPEDEF_BC_THREAD_T = @TYPEDEF_BC_THREAD_T@
TYPEDEF_INT16_T = @TYPEDEF_INT16_T@
TYPEDEF_INT32_T = @TYPEDEF_INT32_T@
TYPEDEF_INT64_T = @TYPEDEF_INT64_T@
TYPEDEF_INT8_T = @TYPEDEF_INT8_T@
TYPEDEF_SIZE_T = @TYPEDEF_SIZE_T@
TYPEDEF_UINT16_T = @TYPEDEF_UINT16_T@
TYPEDEF_UINT32_T = @TYPEDEF_UINT32_T@
TYPEDEF_UINT64_T = @TYPEDEF_UINT64_T@
TYPEDEF_UINT8_T = @TYPEDEF_UINT8_T@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_cv_have_gcj = @ac_cv_have_gcj@
ac_cv_have_gcjh = @ac_cv_have_gcjh@
ac_cv_have_java = @ac_cv_have_java@
ac_cv_have_javac = @ac_cv_have_javac@
ac_cv_have_javah = @ac_cv_have_javah@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
javac = @javac@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = gnu no-dependencies
INCLUDES = -I$(top_srcdir)/include
LDADD = $(top_builddir)/libbeecrypt.la
testmd5_SOURCES = testmd5.c
testripemd128_SOURCES = testripemd128.c
testripemd160_SOURCES = testripemd160.c
testripemd256_SOURCES = testripemd256.c
testripemd320_SOURCES = testripemd320.c
testsha1_SOURCES = testsha1.c
testsha224_SOURCES = testsha224.c
testsha256_SOURCES = testsha256.c
testsha384_SOURCES = testsha384.c
testsha512_SOURCES = testsha512.c
testhmacmd5_SOURCES = testhmacmd5.c
testhmacsha1_SOURCES = testhmacsha1.c
testaes_SOURCES = testaes.c testutil.c
testblowfish_SOURCES = testblowfish.c testutil.c
testmp_SOURCES = testmp.c
testmpinv_SOURCES = testmpinv.c
testdsa_SOURCES = testdsa.c
testrsa_SOURCES = testrsa.c
testrsacrt_SOURCES = testrsacrt.c
testdldp_SOURCES = testdldp.c
testelgamal_SOURCES = testelgamal.c
benchme_SOURCES = benchme.c
benchrsa_SOURCES = benchrsa.c
benchhf_SOURCES = benchhf.c
benchbc_SOURCES = benchbc.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
benchbc$(EXEEXT): $(benchbc_OBJECTS) $(benchbc_DEPENDENCIES) 
	@rm -f benchbc$(EXEEXT)
	$(LINK) $(benchbc_OBJECTS) $(benchbc_LDADD) $(LIBS)
benchhf$(EXEEXT): $(benchhf_OBJECTS) $(benchhf_DEPENDENCIES) 
	@rm -f benchhf$(EXEEXT)
	$(LINK) $(benchhf_OBJECTS) $(benchhf_LDADD) $(LIBS)
benchme$(EXEEXT): $(benchme_OBJECTS) $(benchme_DEPENDENCIES) 
	@rm -f benchme$(EXEEXT)
	$(LINK) $(benchme_OBJECTS) $(benchme_LDADD) $(LIBS)
benchrsa$(EXEEXT): $(benchrsa_OBJECTS) $(benchrsa_DEPENDENCIES) 
	@rm -f benchrsa$(EXEEXT)
	$(LINK) $(benchrsa_OBJECTS) $(benchrsa_LDADD) $(LIBS)
testaes$(EXEEXT): $(testaes_OBJECTS) $(testaes_DEPENDENCIES) 
	@rm -f testaes$(EXEEXT)
	$(LINK) $(testaes_OBJECTS) $(testaes_LDADD) $(LIBS)
testblowfish$(EXEEXT): $(testblowfish_OBJECTS) $(testblowfish_DEPENDENCIES) 
	@rm -f testblowfish$(EXEEXT)
	$(LINK) $(testblowfish_OBJECTS) $(testblowfish_LDADD) $(LIBS)
testdldp$(EXEEXT): $(testdldp_OBJECTS) $(testdldp_DEPENDENCIES) 
	@rm -f testdldp$(EXEEXT)
	$(LINK) $(testdldp_OBJECTS) $(testdldp_LDADD) $(LIBS)
testdsa$(EXEEXT): $(testdsa_OBJECTS) $(testdsa_DEPENDENCIES) 
	@rm -f testdsa$(EXEEXT)
	$(LINK) $(testdsa_OBJECTS) $(testdsa_LDADD) $(LIBS)
testelgamal$(EXEEXT): $(testelgamal_OBJECTS) $(testelgamal_DEPENDENCIES) 
	@rm -f testelgamal$(EXEEXT)
	$(LINK) $(testelgamal_OBJECTS) $(testelgamal_LDADD) $(LIBS)
testhmacmd5$(EXEEXT): $(testhmacmd5_OBJECTS) $(testhmacmd5_DEPENDENCIES) 
	@rm -f testhmacmd5$(EXEEXT)
	$(LINK) $(testhmacmd5_OBJECTS) $(testhmacmd5_LDADD) $(LIBS)
testhmacsha1$(EXEEXT): $(testhmacsha1_OBJECTS) $(testhmacsha1_DEPENDENCIES) 
	@rm -f testhmacsha1$(EXEEXT)
	$(LINK) $(testhmacsha1_OBJECTS) $(testhmacsha1_LDADD) $(LIBS)
testmd5$(EXEEXT): $(testmd5_OBJECTS) $(testmd5_DEPENDENCIES) 
	@rm -f testmd5$(EXEEXT)
	$(LINK) $(testmd5_OBJECTS) $(testmd5_LDADD) $(LIBS)
testmp$(EXEEXT): $(testmp_OBJECTS) $(testmp_DEPENDENCIES) 
	@rm -f testmp$(EXEEXT)
	$(LINK) $(testmp_OBJECTS) $(testmp_LDADD) $(LIBS)
testmpinv$(EXEEXT): $(testmpinv_OBJECTS) $(testmpinv_DEPENDENCIES) 
	@rm -f testmpinv$(EXEEXT)
	$(LINK) $(testmpinv_OBJECTS) $(testmpinv_LDADD) $(LIBS)
testripemd128$(EXEEXT): $(testripemd128_OBJECTS) $(testripemd128_DEPENDENCIES) 
	@rm -f testripemd128$(EXEEXT)
	$(LINK) $(testripemd128_OBJECTS) $(testripemd128_LDADD) $(LIBS)
testripemd160$(EXEEXT): $(testripemd160_OBJECTS) $(testripemd160_DEPENDENCIES) 
	@rm -f testripemd160$(EXEEXT)
	$(LINK) $(testripemd160_OBJECTS) $(testripemd160_LDADD) $(LIBS)
testripemd256$(EXEEXT): $(testripemd256_OBJECTS) $(testripemd256_DEPENDENCIES) 
	@rm -f testripemd256$(EXEEXT)
	$(LINK) $(testripemd256_OBJECTS) $(testripemd256_LDADD) $(LIBS)
testripemd320$(EXEEXT): $(testripemd320_OBJECTS) $(testripemd320_DEPENDENCIES) 
	@rm -f testripemd320$(EXEEXT)
	$(LINK) $(testripemd320_OBJECTS) $(testripemd320_LDADD) $(LIBS)
testrsa$(EXEEXT): $(testrsa_OBJECTS) $(testrsa_DEPENDENCIES) 
	@rm -f testrsa$(EXEEXT)
	$(LINK) $(testrsa_OBJECTS) $(testrsa_LDADD) $(LIBS)
testrsacrt$(EXEEXT): $(testrsacrt_OBJECTS) $(testrsacrt_DEPENDENCIES) 
	@rm -f testrsacrt$(EXEEXT)
	$(LINK) $(testrsacrt_OBJECTS) $(testrsacrt_LDADD) $(LIBS)
testsha1$(EXEEXT): $(testsha1_OBJECTS) $(testsha1_DEPENDENCIES) 
	@rm -f testsha1$(EXEEXT)
	$(LINK) $(testsha1_OBJECTS) $(testsha1_LDADD) $(LIBS)
testsha224$(EXEEXT): $(testsha224_OBJECTS) $(testsha224_DEPENDENCIES) 
	@rm -f testsha224$(EXEEXT)
	$(LINK) $(testsha224_OBJECTS) $(testsha224_LDADD) $(LIBS)
testsha256$(EXEEXT): $(testsha256_OBJECTS) $(testsha256_DEPENDENCIES) 
	@rm -f testsha256$(EXEEXT)
	$(LINK) $(testsha256_OBJECTS) $(testsha256_LDADD) $(LIBS)
testsha384$(EXEEXT): $(testsha384_OBJECTS) $(testsha384_DEPENDENCIES) 
	@rm -f testsha384$(EXEEXT)
	$(LINK) $(testsha384_OBJECTS) $(testsha384_LDADD) $(LIBS)
testsha512$(EXEEXT): $(testsha512_OBJECTS) $(testsha512_DEPENDENCIES) 
	@rm -f testsha512$(EXEEXT)
	$(LINK) $(testsha512_OBJECTS) $(testsha512_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


# Run every benchmark test twice
bench: benchme benchrsa benchhf benchbc
	./benchme
	./benchme
	./benchrsa
	./benchrsa
	./benchhf MD5
	./benchhf MD5
	./benchhf SHA-1
	./benchhf SHA-1
	./benchhf SHA-256
	./benchhf SHA-256
	./benchhf SHA-512
	./benchhf SHA-512
	./benchbc AES 128
	./benchbc AES 128
	./benchbc Blowfish 128
	./benchbc Blowfish 128

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
